name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Generate icons
      run: |
        python -c "
        from PIL import Image
        img = Image.new('RGBA', (256, 256), color='white')
        img.save('generated-icon.png')
        if '${{ matrix.os }}' == 'windows-latest':
            img.save('generated-icon.ico')
        elif '${{ matrix.os }}' == 'macos-latest':
            img.save('generated-icon.icns')
        "
      
    - name: Build executable
      run: python build_exe.py
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DuplicateFileDetector-${{ matrix.os }}
        path: |
          dist/DuplicateFileDetector*
          README.md
          LICENSE
